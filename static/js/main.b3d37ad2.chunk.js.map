{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","arr","setArr","id","setId","handleStyle","ele","styles","height","width","margin","textAlign","fontSize","border","borderRadius","backgroundColor","className","type","placeholder","value","onChange","e","target","style","onClick","copyArr","filter","Number","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA+DeA,MA5Df,WACE,MAAsBC,mBAAS,CAAC,EAAG,EAAG,EAAG,EAAG,IAA5C,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAoBF,mBAAS,IAA7B,mBAAOG,EAAP,KAAWC,EAAX,KAWMC,EAAc,SAACC,GACnB,IAAMC,EAAS,CACbC,OAAQ,OACRC,MAAO,OACPC,OAAQ,MACRC,UAAW,SACXC,SAAU,OACVC,OAAQ,kBACRC,aAAc,OAEhB,OAAOR,GACL,KAAK,EAAGC,EAAOQ,gBAAkB,MACzB,MACR,KAAK,EAAGR,EAAOQ,gBAAkB,QACzB,MACR,KAAK,EAAGR,EAAOQ,gBAAkB,OACzB,MACR,KAAK,EAAGR,EAAOQ,gBAAkB,SACzB,MACR,KAAK,EAAGR,EAAOQ,gBAAkB,SAKnC,OAAOR,GAGT,OACE,sBAAKS,UAAU,MAAf,UACE,gDACA,uBAAOC,KAAK,SAASC,YAAY,oBAAoBC,MAAOhB,EAAIiB,SAAU,SAACC,GAAD,OAAKjB,EAAMiB,EAAEC,OAAOH,QAAQI,MAAO,CAACd,MAAO,WAFvH,QAGE,wBAAQe,QAxCM,WAChB,IAAMC,EAAUxB,EAAIyB,QAAO,SAACpB,GAC1B,OAAOA,IAAQqB,OAAOxB,MAGxBD,EAAOuB,GACPrB,EAAM,KAkCJ,mBACA,qBAAKD,GAAG,iBAAR,SAEIF,EAAI2B,KAAI,SAACtB,EAAKuB,GACZ,OACE,qBAAiBN,MAAOlB,EAAYC,GAApC,SACGA,GADOuB,YCxCTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b3d37ad2.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport './App.css'\n\nfunction App() {\n  const [arr, setArr] = useState([1, 2, 3, 4, 5]);\n  const [id, setId] = useState('');\n  \n  const handleBtn = ()=>{\n    const copyArr = arr.filter((ele)=>{\n      return ele !== Number(id)\n    })\n    \n    setArr(copyArr);   \n    setId('');\n  }\n \n  const handleStyle = (ele)=>{\n    const styles = {\n      height: \"50px\",\n      width: \"50px\",\n      margin: \"5px\",\n      textAlign: 'center',\n      fontSize: \"40px\",\n      border: \"solid 1px black\",\n      borderRadius: \"50%\",\n    }\n    switch(ele){\n      case 1: styles.backgroundColor = 'red';\n              break;\n      case 2: styles.backgroundColor = 'green';\n              break;\n      case 3: styles.backgroundColor = 'blue';\n              break;\n      case 4: styles.backgroundColor = 'purple';\n              break;\n      case 5: styles.backgroundColor = 'yellow';\n              break;\n      default:\n              break;\n    }\n    return styles;\n  }\n\n  return (\n    <div className=\"App\">\n      <span>Input value:</span> \n      <input type='number' placeholder=\"Enter Ball Number\" value={id} onChange={(e)=>setId(e.target.value)} style={{width: \"150px\"}}/> &nbsp;\n      <button onClick={handleBtn}>Shoot</button>\n      <div id=\"ball-container\">\n        {\n          arr.map((ele, index)=>{\n            return(\n              <div key={index} style={handleStyle(ele)} >\n                {ele}\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}